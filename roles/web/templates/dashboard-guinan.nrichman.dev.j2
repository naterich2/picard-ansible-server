##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
#
# In most cases, administrators will remove this file from sites-enabled/ and
# leave it as reference inside of sites-available where it will continue to be
# updated by the nginx packaging team.
#
# This file will automatically load configuration files provided by other
# applications, such as Drupal or Wordpress. These applications will be made
# available underneath a path with that package name, such as /drupal8.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration
#

upstream jackett_srv {
    	server 10.0.9.2:9117;
}
upstream lidarr_srv {
	server 10.0.9.3:8686;
}
upstream radarr_srv {
 	server 10.0.9.4:7878;
}
upstream sonarr_srv {
    	server 10.0.9.5:8989;
}
upstream transmission_srv {
    	server 10.0.9.6:9091;
}
upstream deezloader_srv {
    	server 10.0.9.7:1730;
}
upstream soulseek_srv {
    	server 10.0.9.8:6080;
}
upstream homer_srv {
      server {{ homer_addr }}:{{ homer_port }};
}
server {
	listen 80;
	listen [::]:80;
	server_name dashboard.nrichman.dev transmission.nrichman.dev;

	#  For now, only allow lan and clients subnet
	allow 10.0.1.0/26;
	allow 10.0.9.0/28;
	allow 10.0.101.0/24;
	# drop rest of the world 
	deny    all;

	return 301 https://$server_name$request_uri;
}
server {
	access_log /var/log/nginx/dashboard.nrichman.dev.log main;
	listen 443 ssl http2;
	listen [::]:443 ssl http2;

	server_name dashboard.nrichman.dev;
  proxy_intercept_errors off;
  server_tokens          off;
	
  ssl_certificate {{ dashboard_ssl }};
  ssl_certificate_key {{ dashboard_ssl_key }};
	#  For now, only allow lan and clients subnet
	allow 10.0.1.0/26;
	allow 10.0.9.0/28;
	allow 10.0.101.0/24;
	# drop rest of the world 
	deny    all;

  access_by_lua '
          local opts = {
            redirect_uri_path = "/redirect_uri",
            accept_none_alg = true,
            discovery = "https://keycloak_endpoint/auth/realms/internal_applications/.well-known/openid-configuration",
            client_id = "elk",
            client_secret = "!!! Set this to the secret from the JSON !!! ",
            ssl_verify = "no",
            redirect_uri_scheme = "https",
            logout_path = "/logout",
            redirect_after_logout_uri = "https://keycloak_endpoint/auth/realms/internal_applications/protocol/openid-connect/logout",
            redirect_after_logout_with_id_token_hint = false,
            session_contents = {id_token=true}
          }
          local res, err = require("resty.openidc").authenticate(opts)

          if err then
            ngx.status = 403
            ngx.say(err)
            ngx.exit(ngx.HTTP_FORBIDDEN)
          end
       ';

	location / {
		proxy_set_header    Host              $host;
		proxy_set_header    X-Real-IP         $remote_addr;
		proxy_set_header    X-Forwarded-For   $proxy_add_x_forwarded_for;
		proxy_set_header    X-Forwarded-Proto $scheme;
		proxy_pass          http://homer_srv;
		proxy_read_timeout  90;
		proxy_redirect      off;
	} 

	location /lidarr/ {
		proxy_set_header    Host              $host;
		proxy_set_header    X-Real-IP         $remote_addr;
		proxy_set_header    X-Forwarded-For   $proxy_add_x_forwarded_for;
		proxy_set_header    X-Forwarded-Proto $scheme;
		proxy_pass          http://lidarr_srv;
		proxy_read_timeout  90;
		proxy_redirect      off;
	} 
	location /radarr/ {
		proxy_set_header    Host              $host;
		proxy_set_header    X-Real-IP         $remote_addr;
		proxy_set_header    X-Forwarded-For   $proxy_add_x_forwarded_for;
		proxy_set_header    X-Forwarded-Proto $scheme;
		proxy_pass          http://radarr_srv;
		proxy_read_timeout  90;
		proxy_redirect      off;
	} 
	location /sonarr/ {
		proxy_set_header    Host              $host;
		proxy_set_header    X-Real-IP         $remote_addr;
		proxy_set_header    X-Forwarded-For   $proxy_add_x_forwarded_for;
		proxy_set_header    X-Forwarded-Proto $scheme;
		proxy_pass          http://sonarr_srv;
		proxy_read_timeout  90;
		proxy_redirect      off;
	} 
	location /transmission/ {
		proxy_set_header    Host              $host;
		proxy_set_header    X-Real-IP         $remote_addr;
		proxy_set_header    X-Forwarded-For   $proxy_add_x_forwarded_for;
		proxy_set_header    X-Forwarded-Proto $scheme;
    proxy_pass_header   X-Transmission-Session-Id;
		proxy_pass          http://transmission_srv;
		proxy_read_timeout  90;
		proxy_redirect      off;
	} 
	location /jackett/ {
		proxy_set_header    Host              $host;
		proxy_set_header    X-Real-IP         $remote_addr;
		proxy_set_header    X-Forwarded-For   $proxy_add_x_forwarded_for;
		proxy_set_header    X-Forwarded-Proto $scheme;
		proxy_pass          http://jackett_srv;
		proxy_read_timeout  90;
		proxy_redirect      off;
	} 
	location /soulseek/ {
		proxy_set_header    Host              $host;
		proxy_set_header    X-Real-IP         $remote_addr;
		proxy_set_header    X-Forwarded-For   $proxy_add_x_forwarded_for;
		proxy_set_header    X-Forwarded-Proto $scheme;
		proxy_pass          http://soulseek_srv/;
		proxy_read_timeout  90;
		proxy_redirect      off;
	} 
	location /deezloader/ {
		proxy_set_header    Host              $host;
		proxy_set_header    X-Real-IP         $remote_addr;
		proxy_set_header    X-Forwarded-For   $proxy_add_x_forwarded_for;
		proxy_set_header    X-Forwarded-Proto $scheme;
		proxy_pass          http://deezloader_srv/;
		proxy_read_timeout  90;
		proxy_redirect      off;
	} 
}
