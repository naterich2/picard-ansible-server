---
- hosts: server
  connection: local
  tasks:
    - name: Include VPN credentials
      tags:
        - download_hub
      include_vars:
        file: group_vars/credentials.yml

######################################################################################
#                                 Create Folders                                     #
######################################################################################
    - name: plex tasks
      import_tasks: tasks/plex.yml
      tags: plex

    - name: stats tasks
      import_tasks: tasks/stats.yml
      tags: stats

    - name: download_hub tasks
      import_tasks: tasks/download-hub.yml
      tags: download_hub

    - name: gitea tasks
      import_tasks: tasks/gitea.yml
      tags: gitea

    - name: nextcloud tasks
      import_tasks: tasks/nextcloud.yml
      tags: nextcloud

    - name: sonarr/radarr/lidarr/jackett tasks
      import_tasks: tasks/rrs.yml
      tags: 
       - lidarr
       - sonarr
       - radarr
       - jackett
       - rrs

######################################################################################
#                                 Docker Containers                                  #
######################################################################################
#
#
#
#
#######################################################
###################### Plex ###########################
#######################################################
    - name: plex Docker Container
      tags:
        - plex
      docker_container:
        name: plex
        image: linuxserver/plex
        pull: true
        volumes:
          - "{{ plex_config }}:/config:rw"
          - "{{ plex_library }}/Movies:/movies:rw"
          - "{{ plex_library }}/TV\ Shows:/tv:rw"
          - "{{ plex_library }}/Music:/music:ro"
          - "{{ plex_library }}/Other:/other:ro"
        network_mode: "host"
        env:
          TZ: "{{ timezone }}"
          VERSION: "docker"
          PUID: "1000"
          PGID: "1000"
        restart_policy: unless-stopped
        memory: 1g
        cpu_period: 100000
        cpu_quota: 100000
#######################################################
##################### Influxdb ########################
#######################################################
    - name: InfluxDB
      docker_container:
        name: influxdb
        image: influxdb
        pull: true
        volumes:
          - "{{ influxdb }}/var:/var/lib/influxdb:rw"
          - "{{ influxdb }}/etc:/etc/influxdb:rw"
        ports:
          - "8086:8086"
          - "8083:8083"
        restart_policy: unless-stopped
        env:
          INFLUXDB_LOGGING_LEVEL: "error"
          INFLUXDB_ADMIN_ENABLED: "true"
        memory: 1g
        cpu_period: 100000
        cpu_quota: 25000
#######################################################
##################### Telegraf ########################
#######################################################
    - name: Telegraf docker
      docker_container:
        name: telegraf
        image: telegraf
        pull: true
        volumes:
          - "{{ telegraf }}/telegraf.conf:/etc/telegraf/telegraf.conf:ro"
          - "/var/run/docker.sock:/var/run/docker.sock:ro"
        ports:
          - "161:161"
        restart_policy: unless-stopped
        memory: 1g
        cpu_period: 100000
        cpu_quota: 25000
#######################################################
##################### Grafana #########################
#######################################################
    - name: Grafana docker
      docker_container:
        name: grafana
        image: grafana/grafana
        pull: true
        volumes:
          - "{{ grafana }}/data:/var/lib/grafana:rw"
          - "{{ grafana }}/config/provisioning:/etc/grafana/provisioning:ro"
        ports:
          - "3000:3000"
        env:
          GF_SERVER_ROOT_URL: "http://192.168.0.197"
          GF_SECURITY_ADMIN_PASSWORD: "test"
        restart_policy: unless-stopped
        memory: 1g
        cpu_period: 100000
        cpu_quota: 25000
#######################################################
################### download_hub ######################
#######################################################
    - name: download_hub with VPN
      tags:
        - download_hub
      docker_container:
        name: download_hub
        image: nrichman/download-hub
        volumes:
          - "/etc/localtime:/etc/localtime:ro"
          - "/etc/timezone:/etc/timezone:ro"
          - "{{ download_hub }}/transmission_config:/config:rw"
          - "{{ download_hub }}/Downloads/transmission:/storage/downloads:rw"
          - "{{ download_hub }}/soulseek_appdata:/root/.SoulseekQt"
          - "{{ download_hub }}/soulseek_logs:/root/Soulseek Chat Logs"
          - "{{ download_hub }}/Downloads/soulseek:/root/Soulseek Downloads"
          - "{{ download_hub }}/Downloads/deezloader:/downloads"
          - "{{ download_hub }}/deezloader_config:/root/.config/Deezloader Remix/config"
          - "{{ plex_library }}:/root/Library:ro"
        ports:
          - "9091:9091"
          - "6080:6080"
          - "1730:1730"
        env:
          TRANSMISSION_HOME: /config
          TRANSMISSION_DOWNLOAD_DIR: /storage/downloads/complete
          TRANSMISSION_INCOMPLETE_DIR: /storage/downloads/incomplete
          TRANSMISSION_WATCH_DIR: /storage/watch
          OPENVPN_PROVIDER: "{{ vpn_provider }}"
          OPENVPN_USERNAME: "{{ vpn_username }}"
          OPENVPN_PASSWORD: "{{ vpn_password }}"
          OPENVPN_CONFIG: "{{ vpn_config }}"
          OPENVPN_OPTS: "--redirect-gateway def1"
          PUID: "0"
          PGID: "0"
          LOCAL_NETWORK: "{{ transmission_local_network }}"
          ENABLE_UFW: "false"
          CREATE_TUN_DEVICE: "true"
          TRANSMISSION_RPC_USERNAME: "{{ transmission_username }}"
          TRANSMISSION_RPC_PASSWORD: "{{ transmission_password }}"
        capabilities:
          - NET_ADMIN
        restart_policy: unless-stopped
        memory: 1g
        cpu_period: 100000
        cpu_quota: 50000
#######################################################
####################### Gitea #########################
#######################################################
    - name: Gitea docker image
      docker_container:
        name: gitea
        image: gitea/gitea
        pull: true
        hostname: git.nrichman.dev
        volumes:
          - "{{ gitea }}:/data:rw"
        ports:
          - "28000:3000"
        restart_policy: unless-stopped
        memory: 1g
#######################################################
###################### MariaDB ########################
#######################################################
    - name: Mariadb docker
      docker_container:
        name: mariadb
        image: yobasystems/alpine-mariadb
        hostname: mariadb
        pull: true
        volumes:
          - "{{ mariadb }}:/var/lib/mysql"
        env:
          MYSQL_DATABASE: "blog"
          MYSQL_USER: "mysql"
          MYSQL_PASSWORD: "{{ mariadb_password }}"
          MYSQL_ROOT_PASSWORD: "{{ mariadb_password }}"
        ports:
          - "3306:3306"
        restart_policy: unless-stopped
        memory: 1g 
        cpu_period: 100000
        cpu_quota: 15000
#######################################################
##################### Nextcloud #######################
#######################################################
    - name: Nextcloud Docker 
      docker_container:
        name: nextcloud
        image: nextcloud:latest
        pull: true
        volumes:
          - "{{ nextcloud }}/html:/var/www/html"
          - "{{ nextcloud }}/config:/var/www/html/config"
          - "{{ nextcloud }}/html:/var/www/html/data"
        env:
          MYSQL_DATABASE: "nextcloud"
          MYSQL_USER: "mysql"
          MYSQL_PASSWORD: "{{ mariadb_password }}"
          MYSQL_HOST: "172.17.0.2:3306"
          NEXTCLOUD_ADMIN_USER: "{{ nextcloud_admin }}"
          NEXTCLOUD_ADMIN_PASSWORD: "{{ nextcloud_admin_password }}"
          #NEXTCLOUD_TRUSTED_DOMAINS: "nrichman.dev www.nrichman.dev"
        ports:
          - "3005:80"
        restart_policy: unless-stopped
        memory: 1g 
        cpu_period: 100000
        cpu_quota: 50000
#######################################################
####################### Lidarr ########################
#######################################################
    - name: Lidarr
      tags:
        - lidarr
        - rrs
      docker_container:
        name: lidarr
        image: linuxserver/lidarr
        pull: true
        volumes:
          - "{{ download_hub }}/lidarr:/config"
          - "{{ download_hub }}/Downloads/transmission/complete:/downloads"
          - "{{ plex_library }}/Music:/music"
        env:
          PUID: "1000"
          PGID: "1000"
          TZ: "America/Chicago"
        ports:
          - "3007:8686"
        restart_policy: unless-stopped
        memory: 1g 
        cpu_period: 100000
        cpu_quota: 55000
#######################################################
####################### Radarr ########################
#######################################################
    - name: radarr container
      tags:
        - radarr
        - rrs
      docker_container:
        name: radarr
        image: linuxserver/radarr:latest
        state: started
        restart_policy: unless-stopped
        ports:
          - "3009:7878"
        env:
          TZ: "America/Chicago"
          PGID: "1000"
          PUID: "1000"
        volumes:
          - "{{ plex_library }}/Movies:/movies"
          - "{{ download_hub }}/Downloads/transmission/complete:/downloads"
          - "{{ download_hub }}/radarr:/config"
        memory: 1g 
        cpu_period: 100000
        cpu_quota: 55000
#######################################################
####################### Sonarr ########################
#######################################################
    - name: sonarr container
      tags:
        - sonarr
        - rrs
      docker_container:
        name: sonarr
        image: linuxserver/sonarr
        state: started
        restart_policy: unless-stopped
        ports:
          - "3011:8989"
        env:
          TZ: "America/Chicago"
          PGID: "1000"
          PUID: "1000"
        volumes:
          - "{{ plex_library }}/TV\ Shows:/tv"
          - "{{ download_hub }}/Downloads/transmission/complete:/downloads"
          - "{{ download_hub }}/sonarr:/config"
        memory: 1g 
        cpu_period: 100000
        cpu_quota: 55000
#######################################################
###################### Jackett ########################
#######################################################
    - name: Jackett Container
      tags:
        - jackett
        - rrs
      docker_container:
        name: jackett
        image: linuxserver/jackett
        state: started
        restart_policy: unless-stopped
        ports:
          - "9117:9117"
        env:
          TZ: "America/Chicago"
          PGID: "1000"
          PUID: "1000"
        volumes:
          - "{{ jackett }}:/config"
          - "{{ jackett_torrent_blackhole }}:/downloads"
    
